#!/bin/sh

# if app not exist
if [ ! -f /bin/tc ]; then
    exit 0
fi

#wait to start web and run from goahead code
. /etc/scripts/web_wait.sh
web_wait

#include functions and env
. /etc/scripts/global.sh

if [ "$opmode" = "0" ]; then
    exit 0
fi

LOG="logger -t QoS"

start() {
get_param
if [ "$QoSEnable" != "" ] && [ "$QoSEnable" != "0" ]; then
    $LOG "Set default rules."
    set_def

    #chek wan is up
    wan_up=`ip link show $real_wan_if up | grep -c ""` > /dev/null 2>&1

    # increase queue length
    if [ "$wan_up" != "0" ]; then
	ifconfig $real_wan_if txqueuelen 1000
    fi
    ifconfig $lan_if txqueuelen 1000

    if [ "$QoSEnable" = "1" ]; then
	$LOG "Load netsched  modules."
	#netsched modules
	sch_mod="cls_u32 cls_tcindex cls_fw act_gact act_police act_ipt em_cmp em_u32 em_nbyte sch_htb sch_dsmark"
	for module in $sch_mod
	do
                modprobe -q $module
        done
	#iptables modules
	ipt_mod="xt_connmark xt_conntrack xt_dscp xt_mark xt_DSCP xt_MARK xt_DSCP ipt_TOS sch_sfq sch_red sch_gred"
	for module in $ipt_mod
	do
                modprobe -q $module
        done
	$LOG " --------------RALINK-QOS------------------------"
	qos_run
    elif [ "$QoSEnable" = "2" ]; then
	    $LOG " --------------PRIO-QOS------------------------"
	    $LOG "Load netsched  modules."
	    mod="sch_esfq sch_sfq cls_u32 em_u32"
	    for module in $mod
	    do
        	    modprobe -q $module
    	    done

	    #PRIOMAP+ESQ2LAN
	    tc qdisc add dev $lan_if root handle 1: prio priomap 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 0
	    tc qdisc add dev $lan_if parent 1:1 handle 10: esfq hash dst
	    tc qdisc add dev $lan_if parent 1:2 handle 20: esfq hash dst
	    tc qdisc add dev $lan_if parent 1:3 handle 30: esfq hash dst

	    #PRIOMAP+SFQ2WAN
	    if [ "$wan_up" != "0" ]; then
		tc qdisc add dev $real_wan_if root handle 1: prio priomap 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 0
		tc qdisc add dev $real_wan_if parent 1:1 handle 10: sfq
		tc qdisc add dev $real_wan_if parent 1:2 handle 20: sfq
		tc qdisc add dev $real_wan_if parent 1:3 handle 30: sfq
	    fi

	    #PORTS2PRIO
	    HIG_P="22 23 53 80 443 1720 5060"
	    MED_P="110 4190 1720 5190 5191 5192 5193 5222 5223 5269 5270 8080"
	    LOW_P="20 25 21 8010"

	    for port in $HIG_P
	    do
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:1
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:1
		if [ "$wan_up" != "0" ]; then
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:1
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:1
		fi
	    done

	    for port in $MED_P
	    do
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:2
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:2
		if [ "$wan_up" != "0" ]; then
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:2
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:2
		fi
	    done

	    for port in $LOW_P
	    do
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:3
		tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:3
		if [ "$wan_up" != "0" ]; then
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip sport $port 0xffff flowid 1:3
		    tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip dport $port 0xffff flowid 1:3
		fi
	    done

	    #icmp
	    tc filter add dev $lan_if parent 1:0 protocol ip prio 1 u32 match ip protocol 1 0xff flowid 1:1
	    if [ "$wan_up" != "0" ]; then
		tc filter add dev $real_wan_if parent 1:0 protocol ip prio 1 u32 match ip protocol 1 0xff flowid 1:1
	    fi
	    #udp
		tc filter add dev $lan_if parent 1:0 protocol ip prio 2 u32 match ip protocol 17 0xff flowid 1:2
	    if [ "$wan_up" != "0" ]; then
		tc filter add dev $real_wan_if parent 1:0 protocol ip prio 2 u32 match ip protocol 17 0xff flowid 1:2
	    fi
    elif [ "$QoSEnable" = "3" ]; then
	    $LOG " -----------------IMQ-FULL-------------------------"
	    $LOG "Load netsched  modules."
	    mod="imq ipt_IMQ"
	    for module in $mod
	    do
        	    modprobe -q $module
    	    done
	    ip link set imq0 up > /dev/null 2>&1
	    ip link set imq1 up > /dev/null 2>&1
    fi
fi
}

stop() {
 $LOG "Stopping SHAPER"
    #Drop all QoS rules
    get_param
    set_def
    INTERFACES=`ls /proc/sys/net/ipv4/conf/ | grep -vE "lo|all|default"`
    for i in $INTERFACES; do
	tc qdisc del dev $i root > /dev/null 2>&1
	tc qdisc del dev $i ingress > /dev/null 2>&1
    done
    if [ "$QoSEnable" = "1" ]; then
	qos_run c > /dev/null 2>&1
    fi
}

set_def() {
    tc qdisc del dev $real_wan_if root > /dev/null 2>&1
    tc qdisc del dev $real_wan_if ingress > /dev/null 2>&1
    tc qdisc del dev $lan_if root  > /dev/null 2>&1
    tc qdisc del dev $lan_if ingress > /dev/null 2>&1
    ip link set imq0 down > /dev/null 2>&1
    ip link set imq1 down > /dev/null 2>&1
}

get_param() {
    QoSEnable=`nvram_get 2860 QoSEnable`
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
