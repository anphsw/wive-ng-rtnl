#!/bin/sh

# if app not exist
if [ ! -f /bin/tc ]; then
    exit 0
fi

# wait to start web and run from goahead code
. /etc/scripts/web_wait.sh
web_wait

# include functions and env
. /etc/scripts/global.sh

if [ "$OperationMode" = "0" ]; then
    exit 0
fi

# chek wan is up
wan_up=`ip link show $real_wan_if up | grep -c ""` > /dev/null 2>&1
if [ "$wan_up" = "0" ]; then
    exit 0
fi

LOG="logger -t QoS"
IPTSCR="/etc/qos_firewall"

start() {
get_param
if [ "$QoSEnable" != "" ] && [ "$QoSEnable" != "0" ]; then
    $LOG "Set default rules."
    set_def

    # increase queue for devices
    if [ -f /tmp/is_32ram_dev ]; then
	ifconfig $real_wan_if txqueuelen 1000
	ifconfig $lan_if txqueuelen 1000
    else
	ifconfig $real_wan_if txqueuelen 100
	ifconfig $lan_if txqueuelen 100
    fi

    # create iptables hook
    printf "#!/bin/sh\n\n" > $IPTSCR

    ######################################
    # netfilter script generate
    ######################################

    # tos based simple qos
    if [ "$simple_qos" = "1" ]; then
	/etc/scripts/config-qos-simple.sh
    fi

    # set execute bits for all
    if [ -f $IPTSCR ]; then
	chmod 755 $IPTSCR
    fi

    ######################################
    # call shaper helpers
    ######################################
    if [ "$QoSEnable" = "1" ]; then
	/etc/scripts/config-qos-ralink.sh
    elif [ "$QoSEnable" = "2" ]; then
	/etc/scripts/config-qos-tc_prio.sh
    elif [ "$QoSEnable" = "3" ]; then
	/etc/scripts/config-qos-user.sh
    fi
fi
}

stop() {
 $LOG "Stopping SHAPER"
    # Drop all QoS rules
    get_param
    set_def
    INTERFACES=`ls /proc/sys/net/ipv4/conf/ | grep -vE "lo|all|default"`
    for i in $INTERFACES; do
	tc qdisc del dev $i root > /dev/null 2>&1
	tc qdisc del dev $i ingress > /dev/null 2>&1
    done
    if [ "$QoSEnable" = "1" ]; then
	qos_run c > /dev/null 2>&1
    fi
    rm -f $IPTSCR
}

set_def() {
    tc qdisc del dev $real_wan_if root > /dev/null 2>&1
    tc qdisc del dev $real_wan_if ingress > /dev/null 2>&1
    tc qdisc del dev $lan_if root  > /dev/null 2>&1
    tc qdisc del dev $lan_if ingress > /dev/null 2>&1
    ip link set imq0 down > /dev/null 2>&1
    ip link set imq1 down > /dev/null 2>&1
}

get_param() {
    QoSEnable=`nvram_get 2860 QoSEnable`
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
