#!/bin/sh

# if app not exist
if [ ! -f /bin/igmpproxy ]; then
    exit 0
fi

# wait to start web and run from goahead code
. /etc/scripts/web_wait.sh
web_wait

# get params
. /etc/scripts/global.sh

wait_connect

LOG="logger -t igmpproxy"

start() {
  # if igmpproxy enable and mode not full bridge
    if [ "$igmpEnabled" = "1" ] && [ "$OperationMode" != "0" ]; then
	get_param
        $LOG "Starting IGMPPROXY"
	# check ip adress set at wan and if need kill igmpproxy
	wan_is_not_null=`ip -4 addr show $wan_if | grep inet -c`
	igmp_is_start=`pidof igmpproxy`
	if [ "$wan_is_not_null" = "0" ] || [ "$igmp_is_start" != "" ]; then
    	    $LOG "Wait 20 sec before start..."
	    killall -q igmpproxy
	    killall -q -SIGKILL igmpproxy
	    sleep 20
	fi

	#generate config file
	gen_config

	# start igmpproxy in switch managment mode
    	igmpproxy $OPTS /etc/igmpproxy.conf &

	# enable mc forwarding
	echo 1 > "/proc/sys/net/ipv4/conf/$wan_if/forwarding"
	echo 1 > "/proc/sys/net/ipv4/conf/all/mc_forwarding"
	echo 1 > "/proc/sys/net/ipv4/conf/default/mc_forwarding"
    else
	echo 0 > /proc/sys/net/ipv4/conf/all/mc_forwarding
	echo 0 > /proc/sys/net/ipv4/conf/default/mc_forwarding
    fi
}

gen_config() {
####################generate config###########################
printf "
quickleave
phyint $wan_if upstream ratelimit 0 threshold 1
altnet 0.0.0.0/0
phyint $lan_if downstream ratelimit 0 threshold 1
phyint $vpn_if disabled
" > /etc/igmpproxy.conf
##############################################################
}

get_param() {
    eval `nvram_buf_get 2860 igmpSnoopMode M2UEnabled wan_port tv_port`
    if [ "$igmpSnoopMode" != "f" ] && [ "$igmpSnoopMode" != "n" ]; then
	# if snoop mode unknown = auto
	igmpSnoopMode=""
    else
	####################################
	# wan port number set
	####################################
	if [ "$wan_port" = "0" ]; then
	    # switch managment mode enabled
	    igmpPort="w"
	fi
	####################################
	# correct mode for igmpsnooping
	####################################
	if [ "$tv_port" = "1" ] || [ "$igmpSnoopMode" = "n" ]; then
	    # if  tvport enabled = force disable snooping
	    igmpSnoopMode="n"
	elif [ "$tv_port" != "1" -a "$M2UEnabled" = "1" ] || [ "$igmpSnoopMode" = "f" ]; then
	    # if  tvport disabled and wifi snoop enabled or mode force = force enable snooping
	    igmpSnoopMode="f"
	else
	    # default snooping auto mode
	    igmpSnoopMode=""
	fi
	####################################
	# gen options for daemon
	####################################
	if [ "$igmpPort" != "" ] || [ "$igmpSnoopMode" != "" ]; then
	    OPTS="-$igmpPort$igmpSnoopMode"
	else
	    OPTS=""
	fi
    fi
}

stop() {
 $LOG "Stopping IGMPPROXY"
    killall -q igmpproxy
    killall -q -SIGKILL igmpproxy
    echo 0 > /proc/sys/net/ipv4/conf/all/mc_forwarding
    echo 0 > /proc/sys/net/ipv4/conf/default/mc_forwarding
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
