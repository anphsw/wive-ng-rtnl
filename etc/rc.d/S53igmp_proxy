#!/bin/sh

#get params
. /etc/scripts/global.sh
#include kernel config                                                                                                                      
. /etc/scripts/config.sh

#wait to start web and run from goahead code
web_wait

LOG="echo IGMPPROXY: "

start() {
if [ -f /bin/igmpproxy ]; then
    igmpen=`nvram_get 2860 igmpEnabled`
    OperationMode=`nvram_get 2860 OperationMode`
    #if igmpproxy enable and mode not full bridge
    if [ "$igmpen" = "1" ] && [ "$OperationMode" != "0" ]; then
      $LOG "Starting IGMPPROXY: "
	printf "quickleave\nphyint $wan_if upstream  ratelimit 0  threshold 1\naltnet 0.0.0.0/0\nphyint $lan_if downstream  ratelimit 0  threshold 1\nphyint ppp0 disabled\n" > /etc/igmpproxy.conf
	sysctl -w net.ipv4.conf.all.mc_forwarding=1
	sysctl -w net.ipv4.conf.default.mc_forwarding=1
	sysctl -w net.ipv4.igmp_max_memberships=30
	ip route replace 224.0.0.0/4 dev $wan_if
	if [ "$CONFIG_WAN_AT_P0" = "y" ]; then
    	    igmpproxy -s /etc/igmpproxy.conf &
	else
    	    igmpproxy -sw /etc/igmpproxy.conf &
	fi
    else
	sysctl -w net.ipv4.conf.all.mc_forwarding=0
	sysctl -w net.ipv4.conf.default.mc_forwarding=0
	sysctl -w net.ipv4.igmp_max_memberships=3
    fi
fi
}

stop() {
 $LOG "Stopping IGMPPROXY: "
    killall -q igmpproxy
    killall -q -9 igmpproxy
    ip route del 224.0.0.0/4 dev $wan_if > /dev/null 2>&1
    sysctl -w net.ipv4.conf.all.mc_forwarding=0
    sysctl -w net.ipv4.conf.default.mc_forwarding=0
    sysctl -w net.ipv4.igmp_max_memberships=3
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
