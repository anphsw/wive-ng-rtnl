#!/bin/sh

#wait to start web and run from goahead code
. /etc/scripts/web_wait.sh
web_wait

#get params
. /etc/scripts/global.sh

LOG="logger -t igmpproxy"

start() {
if [ -f /bin/igmpproxy ]; then
    #if igmpproxy enable and mode not full bridge
    get_param
    sysctl -w net.ipv4.igmp_max_memberships=5
    if [ "$igmpen" = "1" ] && [ "$OperationMode" != "0" ]; then
      $LOG "Starting IGMPPROXY"
	printf "quickleave\nphyint $wan_if upstream  ratelimit 0  threshold 1\naltnet 0.0.0.0/0\nphyint $lan_if downstream  ratelimit 0  threshold 1\nphyint ppp0 disabled\n" > /etc/igmpproxy.conf
	echo 1 > /proc/sys/net/ipv4/conf/all/mc_forwarding
	echo 1 > /proc/sys/net/ipv4/conf/default/mc_forwarding
	ip route replace 224.0.0.0/4 dev $wan_if
	if [ "$wan_port" = "4" ]; then
    	    igmpproxy -s /etc/igmpproxy.conf &
	else
    	    igmpproxy -sw /etc/igmpproxy.conf &
	fi
    else
	echo 0 > /proc/sys/net/ipv4/conf/all/mc_forwarding
	echo 0 > /proc/sys/net/ipv4/conf/default/mc_forwarding
    fi
fi
}

stop() {
 $LOG "Stopping IGMPPROXY"
    killall -q igmpproxy
    killall -q -9 igmpproxy
    echo 0 > /proc/sys/net/ipv4/conf/all/mc_forwarding
    echo 0 > /proc/sys/net/ipv4/conf/default/mc_forwarding
    ip route del 224.0.0.0/4 dev $wan_if > /dev/null 2>&1
}

get_param() {
    igmpen=`nvram_get 2860 igmpEnabled`
    OperationMode=`nvram_get 2860 OperationMode`
    wan_port=`nvram_get 2860 wan_port`
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
