#!/bin/sh

# wait to start web and run from goahead code
. /etc/scripts/web_wait.sh
web_wait

# get params
. /etc/scripts/global.sh

LOG="logger -t wan"

start() {
 $LOG "Start WAN config"
    get_param

    # stop dhcp client
    killall -q udhcpc
    killall -q -SIGKILL udhcpc

    # clear conntrack and routes tables/caches
    flush_net_caches

    # set MAC adresses LAN/WAN if not bridge and not ethernet converter modes
    if [ "$OperationMode" != "0" ] && [ "$OperationMode" != "2" ]; then
	$LOG "$phys_wan_if_MACADDR $WAN_MAC_ADDR"
	ifconfig "$phys_wan_if" hw ether "$WAN_MAC_ADDR"
	ifconfig "$phys_wan_if" txqueuelen "$txqueuelen"
    fi

    # if not bridge wan up
    if [ "$OperationMode" != "0" ]; then
	# drop adress from wan if pure pppoe enabled
	if [ "$vpnEnabled" = "on" ] && [ "$vpnType" = "0" ] && [ "$vpnPurePPPOE" = "1" ]; then
	    $LOG "PURE PPPOE Mode - NOT start dhcpc or config wan!"
	    ip addr flush dev "$wan_if"
	fi
	# set manual mtu to wan if set
	if [ "$wan_manual_mtu" != "0" ] && [ "$wan_manual_mtu" != "" ]; then
	    $LOG "Set manual MTU to WAN $wan_manual_mtu"
	    ip link set mtu $wan_manual_mtu dev "$wan_if"
	fi
	# enable wan interface
	ip link set "$wan_if" up
	# enable forward for wan
	echo 1 > "/proc/sys/net/ipv4/conf/$wan_if/forwarding"
    fi

    if [ "$wanConnectionMode" = "STATIC" ] || [ "$OperationMode" = "0" ]; then
	if [ "$OperationMode" != "0" ]; then
	    # lan and wan ip should not be the same except in bridge mode
	    if [ "$wan_ipaddr" = "$lan_ipaddr" ]; then
		$LOG "wan service: warning: WAN's IP address is set identical to LAN"
		exit 0
	    fi
	    # wan interface up and default gateway
	    ifconfig "$wan_if" "$wan_ipaddr" netmask "$wan_netmask"
	    # always treat bridge mode having static wan connection
	    # route mode
	    if [ "$wan_gateway" != "" ] && [ "$wan_gateway" != "0.0.0.0" ]; then
		ip route replace default via $wan_gateway
	    fi
	    # add routes configured in web
	    if [ -f /etc/routes_replace ]; then
		$LOF "Add user routes."
		/etc/routes_replace replace "$phys_lan_if" "$wan_if"
	    fi
	    # send Cisco Discovery request
	    if [ -f /bin/cdp-send ] && [ -f /etc/scripts/config-cdp.sh ]; then
		config-cdp.sh &
	    fi
	else
	    # wan interface up and default gateway
	    ifconfig br0 $lan_ipaddr netmask $lan_netmask
	    # if bridge mode dgw on dev br0 set
	    if [ "$wan_gateway" != "" ] && [ "$wan_gateway" != "0.0.0.0" ]; then
    		ip route replace default dev br0 via $wan_gateway
	    else
    		ip route replace default dev br0
	    fi
        fi
    elif [ "$wanConnectionMode" = "DHCP" ] && [ "$vpnPurePPPOE" != "1" ]; then
	# reload global
	. /etc/scripts/global.sh

	# wait sta connected
	wait_connect

	# get udhcp param
	udhcpc_opts

	$LOG "Start DHCP client."
	(sleep 2 && udhcpc $UDHCPCOPTS > /dev/null 2>&1) &
    elif [ "$wanConnectionMode" = "ZERO" ] || [ "$vpnPurePPPOE" = "1" ]; then
	# reload global
	. /etc/scripts/global.sh

	# wait sta connected
	wait_connect

	$LOG "Call zeroconf for get wan ip address."
	zero_conf
    else
	$LOG "Unknown mode. Please reset device."
    fi
}

get_param() {
    # get parametrs
    eval `nvram_buf_get 2860 wan_ipaddr wan_netmask wan_gateway wan_manual_mtu lan_ipaddr lan_netmask HostName`
}

stop() {
    :
}

case "$1" in
	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart}"
	    exit 1
esac
