#!/bin/sh

#get params
. /etc/scripts/global.sh
. /etc/scripts/config.sh

LOG="echo LAN: "

start() {
$LOG "Start network interfaces..."
get_param
getMacIf
get_txqlen
#-------------------PRECONFIG-----------------------------
    if [ "$brisup" = "0" ]; then
	if [ "$brset" = "0" ]; then
	    $LOG "-==Add bridge in the system==-"
	    brctl addbr br0
        fi
	$LOG "-==BR0_MACADDR $LANMAC==-"
	ifconfig br0 hw ether "$LANMAC"
	$LOG "-==Up bridge interface==-"
	ip link set br0 up
    fi
    if [ "$lanisup" = "0" ]; then
	$LOG "-==ETH2_MACADDR $LANMAC==-"
	ifconfig eth2 hw ether "$LANMAC"
	ifconfig eth2 txqueuelen "$txqueuelen"
	if [ "$vlan_double_tag" = "1" ]; then
	    sysctl -w net.ipv4.vlan_double_tag=1
	else
	    sysctl -w net.ipv4.vlan_double_tag=0
	fi
	$LOG "-==Up vlan root interface==-"
	ip link set eth2 up
	vlanisconfig=0
    fi
    if [ "$vlanisconfig" != "2" ]; then
        $LOG "-==Add vlans and config==-"
	vconfig add eth2 1
	vconfig add eth2 2
	$LOG "-==ETH2.1_MACADDR $LANMAC==-"
	ifconfig eth2.1 hw ether "$LANMAC"
	$LOG "-==ETH2.2_MACADDR $WANMAC==-"
	ifconfig eth2.2 hw ether "$WANMAC"
	vlanisconfig=2
    fi

    #eth2.1 always up
    ip link set eth2.1 up
    
    #flush ip from interfaces
    addr_flush
 
#-------------------CONFIG--------------------------------
    ip link set $lan_if down
    #-------------------LAN1----------------
    $LOG "Add LAN1 iface"
    if [ "$lan_ip" != "" ]; then
	if [ "$lan_nm" = "" ]; then
	    nm="255.0.0.0"
	fi
	ifconfig $lan_if $lan_ip netmask $lan_nm up
    else
	ifconfig $lan_if 0.0.0.0 up	
    fi
    $LOG ">>>>> Mode is $opmode, wan iface $wan_if, lan iface $lan_if, adress $lan_ip <<<<<"

     #-------------------LAN2----------------
    if [ "$lan2enabled" = "1" ]; then
	$LOG "Add LAN2 iface"
        ifconfig "$lan2_if" "$lan_ip_2" netmask "$lan_nm_2"
        $LOG "ifconfig "$lan2_if" "$lan_ip_2" netmask "$lan_nm_2""
    fi
}

stop() {
$LOG "Stop network interfaces..."
    dev=`cat /proc/net/vlan/config | grep eth | cut -d' ' -f 1`
    for i in $dev; do
	ip link set $i down > /dev/null 2>&1
	vconfig rem $i > /dev/null 2>&1
    done
    ip link set br0 down > /dev/null 2>&1
    ip link set $lan_if down > /dev/null 2>&1
    ip link set $lan2_if down > /dev/null 2>&1
    brctl delbr br0 > /dev/null 2>&1
}

get_param() {
    lan_ip=`nvram_get 2860 lan_ipaddr`
    lan_nm=`nvram_get 2860 lan_netmask`
    lan_ip_2=`nvram_get 2860 lan2_ipaddr`
    lan_nm_2=`nvram_get 2860 lan2_netmask`
    lan2enabled=`nvram_get 2860 Lan2Enabled`
    vlan_double_tag=`nvram_get 2860 vlan_double_tag`
    brset=`brctl show  | grep br0 -c`
    vlanisconfig=`cat /proc/net/vlan/config | grep eth -c` > /dev/null 2>&1
    brisup=`ip link show br0 up | grep -c ""` > /dev/null 2>&1
    lanisup=`ip link show eth2 up | grep -c ""` > /dev/null 2>&1
}

addr_flush() {
    #drop adresses
    dev=`cat /proc/net/vlan/config | grep eth | cut -d' ' -f 1`
    for i in $dev; do
	ip addr flush dev $i > /dev/null 2>&1
	if [ "$CONFIG_IPV6" != "" ] ; then
	    ip -6 addr flush dev $i > /dev/null 2>&1
	fi
    done
}

case "$1" in
	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart}"
	    exit 1
esac
