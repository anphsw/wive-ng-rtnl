#!/bin/sh

#get params
. /sbin/global.sh
. /sbin/config.sh

#wait to start web and run from goahead code
web_wait

start() {
 echo "Start wan config"

    #set variable
    HOSTNAME_NVRAM=`nvram_get 2860 HostName`
    UDHCPCOPTS="-r -S -R -T 10 -A 30 -s /sbin/udhcpc.sh -p /var/run/udhcpc.pid -O staticroutes -f &"

    #get parametrs
    opmode=`nvram_get 2860 OperationMode`
    wanmode=`nvram_get 2860 wanConnectionMode`

    clone_en=`nvram_get 2860 macCloneEnabled`
    clone_mac=`nvram_get 2860 macCloneMac`

    #stop dhcp client
    killall -q udhcpc
    killall -q -9 udhcpc

    #set force renew marker
    mkdir -p /var/tmp/is_up
    echo 1 > /var/tmp/is_up/force_renew

    #need hostname
    if [ "$HOSTNAME_NVRAM" != "" ]; then
	HOSTNAME="$HOSTNAME_NVRAM"
    else
	HOSTNAME="Wive-RTNL"
    fi

    /bin/hostname $HOSTNAME

    #workaround fix me!!!
    if [ "$wan_if" = "" ]; then
	wan_if="eth2.2"
    fi

    #MAC Clone: bridge mode doesn't support MAC Clone
    if [ "$opmode" != "0" -a "$clone_en" = "1" ]; then
	ip link set $wan_if down > /dev/null 2>&1
        if [ "$opmode" = "2" ]; then
		#reload wifi modules
		service modules restart
        else
                ifconfig $wan_if hw ether $clone_mac
        fi
	ip link set $wan_if up
    fi

    if [ "$wanmode" = "STATIC" -o "$opmode" = "0" ]; then
	#always treat bridge mode having static wan connection
	ip=`nvram_get 2860 wan_ipaddr`
	nm=`nvram_get 2860 wan_netmask`
	gw=`nvram_get 2860 wan_gateway`
	pd=`nvram_get 2860 wan_primary_dns`
	sd=`nvram_get 2860 wan_secondary_dns`
	
	#lan and wan ip should not be the same except in bridge mode
	if [ "$opmode" != "0" ]; then
		lan_ip=`nvram_get 2860 lan_ipaddr`
		if [ "$ip" = "$lan_ip" ]; then
			echo "wan service: warning: WAN's IP address is set identical to LAN"
			exit 0
		fi
	else
		#use lan's ip address instead
		ip=`nvram_get 2860 lan_ipaddr`
		nm=`nvram_get 2860 lan_netmask`
	fi

	#wan interface up and default gateway
	ifconfig $wan_if $ip netmask $nm
	if [ "$opmode" != "0" ]; then
	    #route mode
	    if [ "$gw" != "" ] && [ "$gw" != "0.0.0.0" ]; then
		ip route replace default via $gw
	    fi
	else
	    #if bridge mode dgw on dev br0 set
    	    ip route replace default dev $wan_if
        fi

    elif [ "$wanmode" = "DHCP" ]; then
	udhcpc -i $wan_if -H $HOSTNAME $UDHCPCOPTS > /dev/null 2>&1 &
    else
	echo "wan service: unknown wan connection type: $wanmode"
	exit 1
    fi


    #check pppd or xl2tpd started
    PPP_STARTED=`pidof pppd`
    XL2TPD_STARTED=`pidof xl2tpd`

    if [ "$PPP_STARTED" = "" ] && [ "$XL2TPD_STARTED" = "" ]; then
	if [ "$wanmode" = "DHCP" ]; then
    	    (sleep 30 && service vpnhelper restart) &
	else
    	    (sleep 15 && service vpnhelper restart) &
	fi
    fi
}

stop() {
 echo "OK"
}

case "$1" in
	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart}"
	    exit 1
esac
