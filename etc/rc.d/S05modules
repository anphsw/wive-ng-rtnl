#!/bin/sh

# get params
. /etc/scripts/global.sh

LOG="echo MODULES"

start() {
    get_param
    # if goahead started
    if [  -f /var/run/goahead.pid ]; then
	# this is workaround for small memory devices
	# and prevent memory fragmentation before load
	# large ralink wifi drivers
	if [ -f /tmp/is_16ram_dev ]; then
	    flush_net_caches
	fi

	# wifi reconfigure only after goahead start
	$LOG "Prepare wifi config..."
	gen_wifi_config
	getMacIf
	if [ "$OperationMode" = "2" ] && [ "$macCloneEnabled" = "1" ] && [ "$macCloneMac" != "" ]; then
	    WLAN_MAC_ADDR="$macCloneMac"
	    $LOG "STA Macclone mode. MAC: $WLAN_MAC_ADDR"
	else
	    $LOG "AP/STA Normal mode. MAC: $WLAN_MAC_ADDR"
	fi
	mac="mac=$WLAN_MAC_ADDR"

	$LOG "Load wifi module..."
    	if [ "$OperationMode" = "2" ]; then
    	    modprobe -q rt2860v2_sta "$mac"
	    # wait module read config from flash
	    sleep 2
	else
    	    modprobe -q rt2860v2_ap  "$mac"
	fi

	$LOG "WiFi interface up..."
	get_txqlen
	if [ "$OperationMode" = "3" ]; then
	    # apcli mode ap interface
	    ifconfig ra0 hw ether	"$WLAN_MAC_ADDR"
	    ifconfig ra0 txqueuelen	"$txqueuelen"
	    ip link set ra0 up
	    # apcli mode sta interface
	    ifconfig apcli0 hw ether	"$WAN_MAC_ADDR"
	    ifconfig apcli0 txqueuelen	"$txqueuelen"
	    ip link set apcli0 up
	else
	    # others modes
	    ifconfig ra0 hw ether	"$WLAN_MAC_ADDR"
	    ifconfig ra0 txqueuelen	"$txqueuelen"
	    ip link set ra0 up
	fi
    else
	# if goahead not started
	# generate modules dep
	if [ ! -f /etc/modules.dep ]; then
	    $LOG "Start modules.dep generate..."
	    depmod -a -n > /etc/modules.dep
	fi
	# not load this modules after goahead start
	# load conntrack helpers modules
	load_nat_helpers
    fi
}

ra0flushadress()
{
    # flush adresses
    ip addr flush dev ra0  > /dev/null 2>&1
    if [ "$OperationMode" = "3" ]; then
	ip addr flush dev apcli0  > /dev/null 2>&1
    fi
    if [ -d /proc/sys/net/ipv6 ] && [ "$IPv6_Enable" = "1" ]; then
        ip -6 addr flush dev ra0 > /dev/null 2>&1
	if [ "$OperationMode" = "3" ]; then
	    ip -6 addr flush dev apcli0  > /dev/null 2>&1
	fi
    fi
}

get_param() {
    eval `nvram_buf_get 2860 macCloneEnabled macCloneMac ipt_account`
}

gen_wifi_config()
{
    rm -f /etc/Wireless/RT2860/RT2860.dat
    ralink_init make_wireless_config rt2860
}

load_nat_helpers()
{
    # not load nf_nat helpers in bridge mode
    if [ "$OperationMode" != "0" ]; then
	# load conntrack helpers
	eval `nvram_buf_get 2860 fwAlgTFTP fwAlgSIP fwAlgGRE fwAlgPPTP fwAlgH323 fwAlgFTP`
	if [ "$fwAlgTFTP" != "0" ]; then
	    modprobe -q nf_conntrack_tftp
	fi
	if [ "$fwAlgSIP" != "0" ]; then
	    modprobe -q nf_conntrack_sip
	    modprobe -q nf_nat_sip
	fi
	if [ "$fwAlgGRE" != "0" ]; then
	    modprobe -q nf_conntrack_gre
	    modprobe -q nf_nat_proto_gre
	fi
	if [ "$fwAlgPPTP" != "0" ]; then
	    modprobe -q nf_conntrack_pptp
	    modprobe -q nf_nat_pptp
	fi
	if [ "$fwAlgH323" != "0" ]; then
	    modprobe -q nf_conntrack_h323
	    modprobe -q nf_nat_h323
	fi
	if [ "$fwAlgFTP" != "0" ]; then
	    modprobe -q nf_nat_ftp
	fi
    	if [ "$ipt_account" = "1" ]; then
	    modprobe -q ipt_account
	fi
    fi
}

stop() {
    get_param
    if [ -f /var/run/goahead.pid ]; then
	$LOG "link wifi down first"
	ra0flushadress
	ip link set ra0 down > /dev/null 2>&1
	if [ "$OperationMode" = "3" ]; then
	    ip link set apcli0 down > /dev/null 2>&1
	fi
	if [ -d /sys/module/hw_nat ]; then
	    $LOG "Unload hw_nat and wireless modules..."
	    mod="hw_nat rt2860v2_ap rt2860v2_sta"
	else
	    $LOG "Unload wireless modules..."
	    mod="rt2860v2_ap rt2860v2_sta"
	fi
	for module in $mod
	do
	    if [ -d /sys/module/$module ]; then
		rmmod $module > /dev/null 2>&1
	    fi
	done
    fi
}

case "$1" in

	ra0flushadress)
	    ra0flushadress
	    ;;

	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart|ra0flushadress}"
	    exit 1
esac
