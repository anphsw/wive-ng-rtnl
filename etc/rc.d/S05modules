#!/bin/sh

#get params                                                                                                                                 
. /etc/scripts/global.sh

#include kernel config
. /etc/scripts/config.sh

LOG="echo MODULES: "

start() {
    get_param
    #if goahead not started
    if [ ! -f /var/run/goahead.pid ]; then
	#generate modules dep
	if [ ! -f /etc/modules.dep ]; then
	    $LOG "Start modules.dep generate..."
	    depmod -a -n >  /etc/modules.dep
	fi
	#configure switch
	resetLanWan
	if [ "$opmode" = "1" ] || [ "$opmode" = "4" ]; then
	    #in gate mode configure vlans
	    setLanWan
	fi
	resetPhy
	setSwMode
	#not load nf_nat helpers in bridge mode
	if [ "$opmode" != "0" ]; then
	    #load conntrack helpers
	    modprobe -q nf_conntrack_tftp
	    modprobe -q nf_conntrack_sip
	    modprobe -q nf_conntrack_gre
	    modprobe -q nf_conntrack_pptp
	    modprobe -q nf_conntrack_h323
	    modprobe -q nf_nat_ftp
	    modprobe -q nf_nat_h323
	    modprobe -q nf_nat_sip
	    modprobe -q nf_nat_proto_gre
	    modprobe -q nf_nat_pptp
	fi
        if [ "$ipt_account" = "1" ]; then
	    modprobe -q ipt_account
	fi
    else
	#not load module before goahead start
	web_wait

	$LOG "Prepare wifi config..."
	gen_wifi_config
	getMacIf
	if [ "$stamode" = "y" ] && [ "$clone_en" = "1" ] && [ "$clone_mac" != "" ]; then
	    WMAC="$clone_mac"
	    $LOG "STA Macclone mode. MAC: $WMAC"
	else
	    $LOG "AP/STA Normal mode. MAC: $WMAC"
	fi
	mac="mac=$WMAC"

	$LOG "Load wifi module..."
    	if [ "$stamode" = "y" ]; then
    	    modprobe -q rt2860v2_sta "$mac"
	else
    	    modprobe -q rt2860v2_ap  "$mac"
	fi

	$LOG "Link wifi up..."
	get_txqlen
	if [ "$opmode" != "3" ]; then
	    ifconfig ra0 hw ether	"$WMAC"
	    ifconfig ra0 txqueuelen	"$txqueuelen"
	    ip link set ra0 up
	else
	    ifconfig ra0 hw ether	"$WANMAC"
	    ifconfig ra0 txqueuelen	"$txqueuelen"
	    ip link set ra0 up
	    ifconfig apcli0 hw ether	"$WMAC"
	    ifconfig apcli0 txqueuelen	"$txqueuelen"
	    ip link set apcli0 up
	fi
    fi
}

stop() {
    get_param
    if [ ! -f /var/run/goahead.pid ]; then
        $LOG "Stop modules.dep generate..."
    else
	$LOG "link wifi down first"
	ra0flushadress
	ip link set ra0 down > /dev/null 2>&1
	if [ "$opmode" = "3" ]; then
	    ip link set apcli0 down > /dev/null 2>&1
	fi
	$LOG "Unload wifi module..."
	rmmod rt2860v2_ap > /dev/null 2>&1
	rmmod rt2860v2_sta > /dev/null 2>&1
    fi
}

ra0flushadress()
{
    #flush adresses
    ip addr flush dev ra0  > /dev/null 2>&1
    if [ "$opmode" = "3" ]; then
	ip addr flush dev apcli0  > /dev/null 2>&1
    fi
    if [ "$CONFIG_IPV6" != "" ] ; then
        ip -6 addr flush dev ra0 > /dev/null 2>&1
	if [ "$opmode" = "3" ]; then
	    ip -6 addr flush dev apcli0  > /dev/null 2>&1
	fi
    fi
}

get_param() {
    clone_en=`nvram_get 2860 macCloneEnabled`
    clone_mac=`nvram_get 2860 macCloneMac`
    ipt_account=`nvram_get 2860 ipt_account`
}

gen_wifi_config()
{
    rm -f /etc/Wireless/RT2860/RT2860.dat
    ralink_init make_wireless_config rt2860
}

case "$1" in

	ra0flushadress)
	    ra0flushadress
	    ;;

	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart|ra0flushadress}"
	    exit 1
esac
