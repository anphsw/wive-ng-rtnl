#!/bin/sh

#get params                                                                                                                                 
. /etc/scripts/global.sh

#include kernel config
. /etc/scripts/config.sh

LOG="echo MODULES: "

start() {
    get_param
    #if goahead not started
    if [ ! -f /var/run/goahead.pid ]; then
	#generate modules dep
	if [ ! -f /etc/modules.dep ]; then
	    $LOG "Start modules.dep generate..."
	    depmod -a -n >  /etc/modules.dep
	fi
	#configure switch
	resetLanWan
	if [ "$opmode" = "1" ]; then
	    #in gate mode configure vlans
	    setLanWan
	fi
    else
	$LOG "Prepare wifi config..."
	gen_wifi_config

	$LOG "Select mac."
	if [ "$stamode" = "y" ] && [ "$clone_en" = "1" ] && [ "$clone_mac" != "" ]; then
	    if [ "$clone_mac" != "" ]; then
		WMAC="$clone_mac"
		$LOG "STA Macclone mode. MAC: $WMAC"
	    fi
	    $LOG "STA Normal mode. MAC: $WMAC"
	else
	    $LOG "AP Normal mode mode. MAC: $WMAC"
	fi
	mac="mac=$WMAC"

	$LOG "Load wifi module..."
    	if [ "$stamode" = "y" ]; then
    	    modprobe -q rt2860v2_sta "$mac"
	else
    	    modprobe -q rt2860v2_ap  "$mac"
	fi
	ifconfig ra0 hw ether "$WMAC"

	$LOG "Link wifi up..."
	ip link set ra0 up
    fi
}

stop() {
    get_param
    if [ ! -f /var/run/goahead.pid ]; then
        $LOG "Stop modules.dep generate..."
    else
	$LOG "link wifi down first"
	ra0flushadress
	ip link set ra0 down > /dev/null 2>&1
	$LOG "Unload wifi module..."
	rmmod rt2860v2_ap > /dev/null 2>&1
	rmmod rt2860v2_sta > /dev/null 2>&1
    fi
}

ra0flushadress()
{
    #flush adresses
    ip addr flush dev ra0  > /dev/null 2>&1
    if [ "$CONFIG_IPV6" != "" ] ; then
        ip -6 addr flush dev ra0 > /dev/null 2>&1
    fi
}

get_param() {
    clone_en=`nvram_get 2860 macCloneEnabled`
    clone_mac=`nvram_get 2860 macCloneMac`
}

gen_wifi_config()
{
    rm -f /etc/Wireless/RT2860/RT2860.dat
    ralink_init make_wireless_config rt2860
}

setLanWan()
{
if [ "$CONFIG_RT_3052_ESW" = "y" ]; then
    if [ "$wan_port" = "0" ]; then
	    echo '##### config vlan partition (WLLLL) #####'
	    config-vlan.sh $SWITCH_MODE WLLLL
    else
	    echo '##### config vlan partition (LLLLW) #####'
	    config-vlan.sh $SWITCH_MODE LLLLW
    fi
	echo '######## clear switch mac table  ########'
        switch clear
fi
}

resetLanWan()
{
if [ "$CONFIG_RT_3052_ESW" = "y" ]; then
    $LOG "Reinit power mode for all switch ports" #workaroud for dir-300NRU
    config-vlan.sh 2 FFFFF
    echo "##### restore to dump switch #####"
    config-vlan.sh $SWITCH_MODE 0
fi
}

case "$1" in
	setLanWan)
	    setLanWan
	    ;;

	resetLanWan)
	    resetLanWan
	    ;;

	ra0flushadress)
	    ra0flushadress
	    ;;

	start)
	    start
	    ;;

	stop)
	    stop
	    ;;

	restart)
	    stop
	    start
	    ;;

	*)
	    echo $"Usage: $0 {start|stop|restart|ra0flushadress}"
	    exit 1
esac
