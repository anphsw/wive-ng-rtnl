#!/bin/sh

# if app not exist
if [ ! -f /bin/dnsmasq ]; then
    exit 0
fi

# get params
. /etc/scripts/global.sh

LOG="logger -t dnsserver"

start() {
  get_param
  gen_hosts
    if [ "$dnsPEnabled" = "1" ] && [ -f $cname ]; then
	if [ -f /tmp/is_32ram_dev ]; then
	    EXT_OPT="-c 128 --dns-forward-max=32"
	else
	    EXT_OPT="-c 32 --dns-forward-max=16"
	fi
	$LOG "Starting DNSMASQ"
	/bin/dnsmasq -N $EXT_OPT --all-servers --clear-on-reload --leasefile-ro \
	    -u nobody -g nobody -C "$cname" -r "$fname" -H "$hname" -f &
    fi
}

gen_hosts() {
  $LOG "Generate /etc/hosts file."
    /bin/hostname $HostName
    echo "127.0.0.1	localhost $HostName.lo"		> /etc/hosts
    echo "$lan_ipaddr	$HostName.lo"			>> /etc/hosts
    if [ "$real_wan_ipaddr" != "" ]; then
	echo "$real_wan_ipaddr	wan.$HostName.lo"	>> /etc/hosts
	if [ "$DDNS" != "" ]; then
	    echo "$real_wan_ipaddr	$DDNS"		>> /etc/hosts
	fi
    fi
    if [ -d /proc/sys/net/ipv6 ] && [ "$IPv6_Enable" = "1" ]; then
	echo "::1	localhost ipv6.$HostName.lo"	>> /etc/hosts
    fi

    # read for all write by root
    chmod 644 /etc/hosts > /dev/null 2>&1
}

get_param() {
    eval `nvram_buf_get 2860 dnsPEnabled HostName lan_ipaddr DDNS`
    cname="/etc/dnsmasq.conf"
    fname="/etc/resolv.conf"
    hname="/etc/hosts"
    # read for all write by root
    chmod 644 "$cname" > /dev/null 2>&1
    chmod 644 "$fname" > /dev/null 2>&1
    chmod 644 "$hname" > /dev/null 2>&1
}

stop() {
  $LOG "Stopping DNSMASQ"
    pid=`pidof dnsmasq`
    count=0
    # try 3 times for correct shutdown
    while kill $pid > /dev/null 2>&1; do
	usleep 300000
	pid=`pidof dnsmasq`
	count="$(($count+1))"
	if [ $count = "3" ] || [ $pid = "" ]; then
	    break
	fi
    done
    # if not correct terminate need kill
    if [ $pid != "" ]; then
	kill -SIGKILL $pid > /dev/null 2>&1
	if [ -f /var/run/dnsmasq.pid ]; then
	    rm -f /var/run/dnsmasq.pid
	fi
    fi
}

case "$1" in
        start)
            start
            ;;

        stop)
            stop
            ;;

        restart)
            stop
            start
            ;;

        *)
            echo $"Usage: $0 {start|stop|restart}"
            exit 1
esac
