#!/bin/sh

#include kernel config
. /bin/config.sh

PPP_IFACE="$1"
PPP_TTY="$2"
PPP_SPEED="$3"
PPP_LOCAL="$4"
PPP_REMOTE="$5"
PPP_IPPARAM="$6"
LOG="logger -t pppd"

lan_ip=`nvram_get 2860 lan_ipaddr`                                                                                       
nm=`nvram_get 2860 lan_netmask`     
Lan2Enabled=`nvram_get 2860 Lan2Enabled`                                                                                 
lan2_ipaddr=`nvram_get 2860 lan2_ipaddr`                                                                                 
lan2_netmask=`nvram_get 2860 lan2_netmask`   
upnp=`nvram_get 2860 upnpEnabled`
OperationMode=`nvram_get 2860 OperationMode`
NAT=`nvram_get 2860 vpnNAT`
DGW=`nvram_get 2860 vpnDGW`
VPN_ROUTING_ENABLED=`nvram_get 2860 vpnRoutingEnabled`

    $LOG "Modify route table need for buggy nas"
    #Remove auto route in VPN and dgw
    ip route del $PPP_REMOTE  > /dev/null 2>&1
    ip route del dev $PPP_IFACE  > /dev/null 2>&1
    if [ "$DGW" = "1" ]; then
	ip route del default > /dev/null 2>&1
    fi

    #Get current dgw
    GWSTRING=`ip route | grep ^default`

    if [ "$GWSTRING" != "" ]; then
        RESTORESTRING="ip route replace $GWSTRING"
        $LOG "Store old default route to file. $GWSTRING "
        rm -f /tmp/ip-down-route-reload
        (
	    echo '#!/bin/sh'
	    echo 'ip route del default'
	    echo "$RESTORESTRING"
	) > /tmp/ip-down-route-reload
	chmod 777 /tmp/ip-down-route-reload
    else
	$LOG "No dgw stored."
	RESTORESTRING=""
	rm -f /tmp/ip-down-route-reload
    fi

    #disable multicast on ppp+ interface
    ifconfig $PPP_IFACE -allmulti
    ifconfig $PPP_IFACE -multicast

    $LOG "Replace DNS from pppd"
    cp -f /etc/resolv.conf /var/tmp/resolv.conf.tmp.$PPP_IFACE
    cat /etc/ppp/resolv.conf /etc/resolv.conf  > /var/tmp/resolv.$PPP_IFACE
    cp -f /var/tmp/resolv.$PPP_IFACE /etc/resolv.conf

    #Replace default route to ppp tunnel
    if [ "$DGW" = "1" ]; then
	$LOG "Replace default route to $PPP_IFACE"
	ip route replace default metric 10 dev $PPP_IFACE
    fi

    #user route add                                                                                                                             
    if [ "$VPN_ROUTING_ENABLED" = "on" ] ; then
        $LOG "Add user routes from ip-up for $PPP_IFACE"
	chmod 777 /etc/routes_ppp_replace
        /etc/routes_ppp_replace $PPP_IFACE replace
    fi

    $LOG "Restart dns server, dyndns, ntp sync and rebuild shaper and iptables rules"
    services_restart.sh pppd

    #this always after route mod
    iptables -A FORWARD -o $PPP_IFACE -j ACCEPT

    #NAT in vpn
    if [ "$NAT" = "on" ]  && [ "$OperationMode" != "0" ]; then                                                            
        $LOG "Add masqrade rules to $PPP_IFACE interface"                                 
	iptables -t nat -A POSTROUTING -o $PPP_IFACE -s $lan_ip/$nm -j MASQUERADE
	#lan2
	if [ "$Lan2Enabled" = "1" ]; then                            
	    iptables -t nat -A POSTROUTING -o $PPP_IFACE -s $lan2_ipaddr/$lan2_netmask -j MASQUERADE
	fi
	#rules for upnp
	if [ "$upnp" = "1" ]; then                                                            
    	    $LOG "Add rules to upnp chain for $PPP_IFACE interface"                                 
    	    iptables -t nat -A PREROUTING -i $PPP_IFACE -j MINIUPNPD                                                       
    	    iptables -t filter -A FORWARD -i $PPP_IFACE -o ! $PPP_IFACE -j MINIUPNPD                                      
        fi                                         
    fi

    service shaper restart

#run scrips from /etc/ppp/ip-up.d/
export PPP_IFACE PPP_TTY PPP_SPEED PPP_LOCAL PPP_REMOTE PPP_IPPARAM
if [ -d /etc/ppp/ip-up.d/ -a -x /bin/run-parts ]; then
    /bin/run-parts /etc/ppp/ip-up.d/
fi
$LOG "All is start OK"
