#!/bin/sh

# Modified by N.Leiten and adopted for Wive-firmware, renamed in "fs"
# "flash" is a part of midge - mini distribuition for adm5120 based routers.
# Full rewrite for Wive-RTNL (RT3050/RT3052) by Evgeniy Manachkin.
# Copyright (C) 2004-2005 by Vladislav Moskovets <midge at vlad.org.ua>
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU GPL v2 or later.

. /etc/scripts/config.sh

TGZfs_size=131072
BLOCKS=2
KEEPMAC=YES
MTDRWFS=/dev/mtdblock5
MTD2CFG=/dev/mtdblock1
MTD2FAC=/dev/mtdblock2

BACKUPCGF=/etc/backup/nvram_backup.dat
RWCONFIGS=/etc/Wireless/rf.bin

get_size(){
  ls -sk $1 |  sed -e "s/ \+/ /g" | cut -d" " -f2
}

usage(){
  echo "Usage: $0 | save | load | restore | nvramreset | fullreset | cleanall" >&2
  echo "____________________________________________________________________________" >&2
  echo " " >&2
  echo "save - Save rwfs to mtd." >&2
  echo "backup_nvram - Save nvram snapshot to rwfs." >&2
  echo "load - Load rwfs from mtd." >&2
  echo "restore - Crash $MTDRWFS and reboot for restore clean rwfs." >&2
  echo "nvramreset - Nvarm clean and load default config." >&2
  echo "fullreset - Full reset include rwfs, nvram and mac adress settings." >&2
  echo "cleanall - 1. Full zero write in config,factory and rwfs particions." >&2
  echo "	   2. Write temlate for RF config (Factory) to flash." >&2
  echo "	   3. Load and write default setting (Config) to flash." >&2
  echo "	   4. Generate new mac and flash it." >&2
  echo "____________________________________________________________________________" >&2
 exit 1
}

load(){
  local dst=/ 
  echo "Loading TGZfs"
  zcat $MTDRWFS | tar xf - -C $dst>>/dev/null
}

save(){
  echo "Save curent date and current time to rwfs"
  sync
  date +%Y%m%d%H%M > /etc/compile-date
  echo "Compress config files"
  tmp="/tmp/tgzfs"
  tar cf - /etc | gzip -9 > $tmp
  if [ "$(get_size $tmp)" -lt $(($TGZfs_size/1024)) ]; then
    echo "Write configs to flash"
    dd if=$tmp of=$MTDRWFS bs=64k count=$BLOCKS conv=sync > /dev/null 2>&1
    echo "Config saved. OK."
  else
    echo "Error: File $tmp too big: $(get_size $tmp)k"
  fi
  rm -f $tmp
  sync
}

restore(){
    echo "Clear rwfs and reboot. Please go smoke..."
    dd if=/dev/urandom of=$MTDRWFS bs=64k count=$BLOCKS
    reboot
}

nvramreset(){
    echo "Load user defaults."
    nvram_default 2860
}

burnrf(){
    echo "Configure part at wifi factory."
    /bin/mtdc_wt
    echo "Flash RF defaults."
    dd if=$RWCONFIGS of=$MTD2FAC
}

cleanall(){
    service modules stop
    echo "Write zero in $MTDRWFS,$MTD2CFG,$MTD2FAC mtd particions." 
    dd if=/dev/zero of=$MTDRWFS conv=sync > /dev/null 2>&1
    dd if=/dev/zero of=$MTD2CFG conv=sync bs=1024 seek=8 count=8 > /dev/null 2>&1
    dd if=/dev/zero of=$MTD2FAC conv=sync > /dev/null 2>&1
    burnrf
    nvramreset
    echo "First start MAC generate"
    macinc1=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc2=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc3=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc4=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc5=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc6=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    macinc7=`cat /dev/urandom | hexdump | head -n 1 | cut -c10,10`
    echo "Set new mac!"
    WAN_MACADDR="00:0B:2B:""$macinc1""$macinc2"":""$macinc1""$macinc3"":""$macinc4""$macinc5"
    LAN_MACADDR="00:0B:2B:""$macinc1""$macinc2"":""$macinc1""$macinc3"":""$macinc4""$macinc6"
    WLAN_MACADDR="00:0B:2B:""$macinc1""$macinc2"":""$macinc1""$macinc3"":""$macinc6""$macinc7"
    nvram_set 2860 WAN_MAC_ADDR "$WAN_MACADDR"
    nvram_set 2860 LAN_MAC_ADDR "$LAN_MACADDR"
    nvram_set 2860 WLAN_MAC_ADDR "$WLAN_MACADDR"
    sync
    reboot
}

fullreset(){
    service modules stop
    echo "Reset rwfs and nvram...."
    nvramreset
    restore
}

backup_nvram(){
    mkdir -p /etc/backup
    echo "Store settings to backup file...."
    echo "#The following line must not be removed." > "$BACKUPCGF"
    echo "Default" >> "$BACKUPCGF"
    ralink_init show 2860 >> "$BACKUPCGF"
}

load_nvram(){
    echo "Load settings from backup file...."
    ralink_init renew 2860 "$BACKUPCGF"
}

main(){
  local cmd="$1"
  [ -z "$cmd" ] && usage
  shift
  case "$cmd" in 
    load) 
      load $@ 
      ;;
    save) 
      save $@ 
      ;;
    restore)
      restore $@
      ;;
    nvramreset)
      nvramreset $@
      ;;
    burnrf)
      burnrf $@
      ;;
    fullreset)
      fullreset $@
      ;;
    cleanall)
      cleanall $@
      ;;
    backup_nvram)
      backup_nvram $@
      ;;
    load_nvram)
      load_nvram $@
      ;;
    *) 
      usage $@ 
      ;;
  esac
}

main $@
