--- rp-pppoe-3.10/src/pppoe.c	2008-06-30 21:00:43.000000000 +0700
+++ rp-pppoe-3.11/src/pppoe.c	2012-08-18 01:31:25.000000000 +0700
@@ -4,7 +4,7 @@
 *
 * Implementation of user-space PPPoE redirector for Linux.
 *
-* Copyright (C) 2000-2006 by Roaring Penguin Software Inc.
+* Copyright (C) 2000-2012 by Roaring Penguin Software Inc.
 *
 * This program may be distributed according to the terms of the GNU
 * General Public License, version 2 or (at your option) any later version.
@@ -70,7 +70,6 @@
 PPPoEConnection *Connection = NULL; /* Must be global -- used
 				       in signal handler */
 
-int persist = 0; 		/* We are not a pppd plugin */
 /***********************************************************************
 *%FUNCTION: sendSessionPacket
 *%ARGUMENTS:
@@ -615,7 +614,7 @@
 		fprintf(stderr, "Sending discovery flood %d\n", n+1);
 	    }
             conn.discoverySocket =
-	        openInterface(conn.ifName, Eth_PPPOE_Discovery, conn.myEth);
+	        openInterface(conn.ifName, Eth_PPPOE_Discovery, conn.myEth, NULL);
 	    discovery(&conn);
 	    conn.discoveryState = STATE_SENT_PADI;
 	    close(conn.discoverySocket);
@@ -629,14 +628,14 @@
     /* Opening this socket just before waitForPADS in the discovery()      */
     /* function would be more appropriate, but it would mess-up the code   */
     if (!optSkipSession)
-        conn.sessionSocket = openInterface(conn.ifName, Eth_PPPOE_Session, conn.myEth);
+        conn.sessionSocket = openInterface(conn.ifName, Eth_PPPOE_Session, conn.myEth, NULL);
 
     /* Skip discovery and don't open discovery socket? */
     if (conn.skipDiscovery && conn.noDiscoverySocket) {
 	conn.discoveryState = STATE_SESSION;
     } else {
         conn.discoverySocket =
-	    openInterface(conn.ifName, Eth_PPPOE_Discovery, conn.myEth);
+	    openInterface(conn.ifName, Eth_PPPOE_Discovery, conn.myEth, NULL);
         discovery(&conn);
     }
     if (optSkipSession) {
