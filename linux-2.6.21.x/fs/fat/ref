140,141c140
< //static int fat_cont_expand(struct inode *inode, loff_t size)
< static int fat_cont_expand(struct inode *inode, unsigned int size)	// 0610 ASUS
---
> static int fat_cont_expand(struct inode *inode, unsigned int size)
146a146
> //	printk("dbg: fat_cont_expand\n");
147a148,150
> 
> //	printk("dbg: fat_cont_expand, generic_cont_expand_simple errno = %d\n", err);
> 	
153c156
< 	if (IS_SYNC(inode))
---
> 	if (IS_SYNC(inode)) {
154a158,159
> //		printk("dbg: fat_cont_expand, sync_page_range_nolock errno = %d\n", err);
> 	}
165a171
> //	printk("dbg: fat_notify_change - 0\n");
172a179
> //		printk("dbg: att->ia_valid\n");
174c181,186
< 			error = fat_cont_expand(inode, attr->ia_size);
---
> 			unlock_kernel();
> 			return 0; // Yen for samba
> #if 0
> //			printk("dbg: attr->ia_size\n");
> 			error = fat_cont_expand(inode, (unsigned int)attr->ia_size);
> //			printk("dbg: fat_notify_change, errno = %d\n", error);
177a190
> #endif
180a194,195
> //	printk("dbg: fat_notify_change - 1\n");
> 
181a197
> //	printk("dbg: fat_notify_change - 1.1\n");
186a203,205
> 
> //	printk("dbg: fat_notify_change - 2\n");
> 
194a214,215
> //	printk("dbg: fat_notify_change - 3\n");
> 
199a221
> //	printk("dbg: fat_notify_change - 4\n");
200a223
> //	printk("dbg: fat_notify_change - 5\n");
203a227,228
> //	printk("dbg: fat_notify_change - 6\n");
> 
207a233,235
> 
> //	printk("dbg: fat_notify_change - 7\n");
> 
208a237,238
> 
> //	printk("dbg: fat_notify_change - 8\n");
